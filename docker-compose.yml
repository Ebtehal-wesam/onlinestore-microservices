services:
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"  # Expose port for service1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD:
      

  orderservice:
    build:
      context: ./orderservice  # Path to your service1 directory
    environment:
      DATABASE_URL: jdbc:postgresql://localhost:5432/orderservice
    depends_on:
      - postgres

  productservice:
    build:
      context: ./productservice # Path to your service2 directory
    environment:
      DATABASE_URL: jdbc:postgresql://localhost:5432/productservice
    depends_on:
      - postgres

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LOG_DIRS: /kafka-logs
    depends_on:
      - zookeeper

  prometheus:
    image: prom/prometheus:v2.42.0
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:8.5.2
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=123