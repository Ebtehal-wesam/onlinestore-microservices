spring.application.name=product-service
spring.datasource.url=jdbc:postgresql://localhost:5432/productservice
spring.datasource.username=postgres
spring.datasource.password=
server.port=0
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
server.error.include-message=always
eureka.server.enable-self-preservation=false
eureka.client.serviceUrl.defaultZone=http://eureka:123@localhost:8761/eureka
spring.cloud.client.instance.instance-id=${spring.application.name}:${random.value}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
management.tracing.sampling.probability=1
spring.cloud.compatibility-verifier.enabled=false
spring.zipkin.base-url=http://localhost:9411
spring.sleuth.enabled=true
spring.sleuth.sampler.probability=1.0


#kafka
spring.kafka.bootstrap.servers=localhost:9092
spring.kafka.template.default.-topic=notifTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.spring.json.type.mapping=event:com.mystore.productservice.event.ProductPlacedEvent
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=your_group_id
spring.kafka.consumer.auto-offset-reset=earliest


#promethus
management.endpoints.web.exposure.include= prometheus